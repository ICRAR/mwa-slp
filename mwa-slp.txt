
Observations that I would suggest you start with.
1089045008 3C444
1090116888 CenA

To Make a visibility data set from the gnu box files:

OBSNUM=1090116888
NCPUS = 20

make_metafits.py -g OBSNUM

if [[ -e OBSNUM_flags.zip ]]
then
    unzip OBSNUM_flags.zip
    flagfiles="-flagfiles OBSNUM_%%.mwaf"
fi

cotter -j NCPUS $flagfiles -timeres 4 -freqres 10 *gpubox*.fits -edgewidth 80 -m OBSNUM.metafits -o OBSNUM.ms

if [[ -d OBSNUM.ms ]] ; then rm *gpubox*fits *.zip *.mwaf ; fi

#Once we have a visibility data set (*.ms) and calibration model, can create a calibration solution for the calibrator.

#make a calibration solution
if [[ ! -s *_solutions.bin ]]
then
    calibrate -j ${ncpus} -p gains_new.txt phases_new.txt -m ${modeldir}/${calmodel} -minuv 20 -applybeam ${obsnum}.ms ${obsnum}_solutions.bin
fi

#apply the solutions
applysolutions ${obsnum}.ms ${obsnum}_solutions.bin

#plot the solutions
plot_aocals.py *_solutions.bin

#quick image of the calibrator field
wsclean -name ${obsnum}_shallow -size 4000 4000 -niter 4000000 -stopnegative -scale ${scale} -pol I -smallinversion -j ${ncpus} ${obsnum}.ms

size= number of pixels imaged
scale=number of pixels per synthesised beam
pol=polarisation imaged.  The “I” here is a pseudo-Stokes I image

Now you need to check to see if tiles need to be flagged, sources need to be peeled, or if you need self cal to refine the solutions.
